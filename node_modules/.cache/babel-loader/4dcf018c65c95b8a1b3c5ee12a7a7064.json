{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\Projetos\\\\site-do-joao-vitor\\\\netflix-clone\\\\src\\\\components\\\\Banner.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport categories, { getMovies } from '../api';\nimport \"./Banner.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Banner() {\n  _s();\n  const [movie, setMovie] = React.useState({});\n  const fetchRandomMovie = async _path => {\n    try {\n      const netflixOriginals = categories.find(category => category.name === \"netflixOriginals\");\n      const data = await getMovies(netflixOriginals.path);\n      const movies = data;\n      const randomIndex = Math.floor(Math.random() * data.results.lenght);\n      setMovie(data === null || data === void 0 ? void 0 : data.results[randomIndex]);\n    } catch (error) {\n      console.log(\"Banner fetchRandomMovie error: \", error);\n    }\n  };\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Banner\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n}\n_s(Banner, \"vjn7l2Xfyv8U759KvgOto7g+Dfw=\");\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","categories","getMovies","Banner","movie","setMovie","useState","fetchRandomMovie","_path","netflixOriginals","find","category","name","data","path","movies","randomIndex","Math","floor","random","results","lenght","error","console","log","useEffect"],"sources":["D:/Desktop/Projetos/site-do-joao-vitor/netflix-clone/src/components/Banner.js"],"sourcesContent":["import React from 'react';\r\nimport categories, { getMovies } from '../api';\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = React.useState({});\r\n\r\n    const fetchRandomMovie = async (_path) => {\r\n        try {\r\n            const netflixOriginals = categories.find(\r\n                (category) => category.name === \"netflixOriginals\"\r\n            );\r\n            const data = await getMovies(netflixOriginals.path);\r\n            const movies = data\r\n            const randomIndex = Math.floor(Math.random() * data.results.lenght);\r\n            setMovie(data?.results[randomIndex]);\r\n        } catch (error) {\r\n            console.log(\"Banner fetchRandomMovie error: \", error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {}, [])\r\n    \r\n\r\n    return <div>Banner</div>\r\n}\r\n\r\nexport default Banner;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,IAAIC,SAAS,QAAQ,QAAQ;AAC9C,OAAO,cAAc;AAAC;AAEtB,SAASC,MAAM,GAAG;EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5C,MAAMC,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACtC,IAAI;MACA,MAAMC,gBAAgB,GAAGR,UAAU,CAACS,IAAI,CACnCC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,KAAK,kBAAkB,CACrD;MACD,MAAMC,IAAI,GAAG,MAAMX,SAAS,CAACO,gBAAgB,CAACK,IAAI,CAAC;MACnD,MAAMC,MAAM,GAAGF,IAAI;MACnB,MAAMG,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGN,IAAI,CAACO,OAAO,CAACC,MAAM,CAAC;MACnEhB,QAAQ,CAACQ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,OAAO,CAACJ,WAAW,CAAC,CAAC;IACxC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,KAAK,CAAC;IACzD;EACJ,CAAC;EAEDG,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;EAGvB,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAiB;AAC5B;AAAC,GArBQtB,MAAM;AAAA,KAANA,MAAM;AAuBf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}