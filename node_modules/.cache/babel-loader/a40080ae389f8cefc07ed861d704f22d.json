{"ast":null,"code":"const API_KEY = \"e4f6a4c9242a2ae28d81ed446acf4d41\";\nconst categories = [{\n  name: \"trending\",\n  title: \"Em alta\",\n  path: `/trending/all/week?api_key=${API_KEY}&language=pt-BR`,\n  isLarge: true\n}, {\n  name: \"netflixOriginals\",\n  title: \"Originais Netflix\",\n  path: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n  isLarge: false\n}, {\n  name: \"topRated\",\n  title: \"Populares\",\n  path: `/movie/top_rated?api_key=${API_KEY}&language=pt-BR`,\n  isLarge: false\n}, {\n  name: \"comedy\",\n  title: \"Comédias\",\n  path: `/discover/tv?api_key=${API_KEY}&with_genres=35`,\n  isLarge: false\n}, {\n  name: \"romances\",\n  title: \"Romances\",\n  path: `/discover/tv?api_key=${API_KEY}&with_genres=10749`,\n  isLarge: false\n}, {\n  name: \"documentaries\",\n  title: \"Documentários\",\n  path: `/discover/tv?api_key=${API_KEY}&with_genres=99`,\n  isLarge: false\n}];\nexport const getMovies = async path => {\n  try {\n    let url = `https://api.themoviedb.org/3/${path}&language=pt-BR`;\n    const response = await fetch(url);\n    return await response.json();\n  } catch (error) {\n    console.log(\"error getMovies: \", error);\n  }\n};\nexport default categories;","map":{"version":3,"names":["API_KEY","categories","name","title","path","isLarge","getMovies","url","response","fetch","json","error","console","log"],"sources":["D:/Desktop/Projetos/site-do-joao-vitor/netflix-clone/src/api.js"],"sourcesContent":["const API_KEY = \"e4f6a4c9242a2ae28d81ed446acf4d41\";\r\n\r\nconst categories = [\r\n  {\r\n    name: \"trending\",\r\n    title: \"Em alta\",\r\n    path: `/trending/all/week?api_key=${API_KEY}&language=pt-BR`,\r\n    isLarge: true,\r\n  },\r\n  {\r\n    name: \"netflixOriginals\",\r\n    title: \"Originais Netflix\",\r\n    path: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    isLarge: false,\r\n  },\r\n  {\r\n    name: \"topRated\",\r\n    title: \"Populares\",\r\n    path: `/movie/top_rated?api_key=${API_KEY}&language=pt-BR`,\r\n    isLarge: false,\r\n  },\r\n  {\r\n    name: \"comedy\",\r\n    title: \"Comédias\",\r\n    path: `/discover/tv?api_key=${API_KEY}&with_genres=35`,\r\n    isLarge: false,\r\n  },\r\n  {\r\n    name: \"romances\",\r\n    title: \"Romances\",\r\n    path: `/discover/tv?api_key=${API_KEY}&with_genres=10749`,\r\n    isLarge: false,\r\n  },\r\n  {\r\n    name: \"documentaries\",\r\n    title: \"Documentários\",\r\n    path: `/discover/tv?api_key=${API_KEY}&with_genres=99`,\r\n    isLarge: false,\r\n  },\r\n];\r\n\r\nexport const getMovies = async (path) => {\r\n  try {\r\n    let url = `https://api.themoviedb.org/3/${path}&language=pt-BR`;\r\n    const response = await fetch(url);\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.log(\"error getMovies: \", error);\r\n  }\r\n};\r\n\r\nexport default categories;"],"mappings":"AAAA,MAAMA,OAAO,GAAG,kCAAkC;AAElD,MAAMC,UAAU,GAAG,CACjB;EACEC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,SAAS;EAChBC,IAAI,EAAG,8BAA6BJ,OAAQ,iBAAgB;EAC5DK,OAAO,EAAE;AACX,CAAC,EACD;EACEH,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE,mBAAmB;EAC1BC,IAAI,EAAG,wBAAuBJ,OAAQ,oBAAmB;EACzDK,OAAO,EAAE;AACX,CAAC,EACD;EACEH,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,WAAW;EAClBC,IAAI,EAAG,4BAA2BJ,OAAQ,iBAAgB;EAC1DK,OAAO,EAAE;AACX,CAAC,EACD;EACEH,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE,UAAU;EACjBC,IAAI,EAAG,wBAAuBJ,OAAQ,iBAAgB;EACtDK,OAAO,EAAE;AACX,CAAC,EACD;EACEH,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,UAAU;EACjBC,IAAI,EAAG,wBAAuBJ,OAAQ,oBAAmB;EACzDK,OAAO,EAAE;AACX,CAAC,EACD;EACEH,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE,eAAe;EACtBC,IAAI,EAAG,wBAAuBJ,OAAQ,iBAAgB;EACtDK,OAAO,EAAE;AACX,CAAC,CACF;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOF,IAAI,IAAK;EACvC,IAAI;IACF,IAAIG,GAAG,GAAI,gCAA+BH,IAAK,iBAAgB;IAC/D,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,OAAO,MAAMC,QAAQ,CAACE,IAAI,EAAE;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,KAAK,CAAC;EACzC;AACF,CAAC;AAED,eAAeV,UAAU"},"metadata":{},"sourceType":"module"}